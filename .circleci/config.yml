version: 2
orbs:
  aws-cli: circleci/aws-cli@0.1.4
  aws-ecs: circleci/aws-ecs@0.0.10
jobs:
  build: 
    Context: my_aws
    docker:
      - image: circleci/golang:1.8
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build image
          command: |
            docker build ./testproject -t cicd:${CIRCLE_SHA1}
      - run:
          name: Save image to an archive
          command: |
            mkdir docker-image
            docker save -o docker-image/image.tar cicd:${CIRCLE_SHA1}
      - persist_to_workspace:
          root: .
          paths:
            - docker-image
  deploy:  
    docker:
      - image: circleci/python:latest
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: workspace
      - run:
          name: update
          command: | 
             sudo apt-get update
             sudo apt-get upgrade
             sudo apt-get install -y perl
             sudo perl -MCPAN -e 'upgrade'
      - run:
          name: Install aws cli
          command: sudo pip install awscli
      - run:
          context: my_aws
          command: |
            aws configure set aws_access_key_id ${AWS_ACCESS_KEY_ID} --profile default
          name: Configure AWS Secret Access Key
      - run:
          context: my_aws
          command: |
            aws configure set aws_secret_access_key ${AWS_SECRET_ACCESS_KEY} --profile default
          name: Configure AWS Access Key ID
      - run:
          context: my_aws
          command: |
                  aws configure set default.region ${AWS_DEFAULT_REGION} --profile default
          name: Configure AWS default region
      - run:
          name: Load image
          command: |
            docker load --input workspace/docker-image/image.tar
      - run:
          Context: my_aws
          name: Setup common environment variables
          command: |
            echo 'export ECR_REPOSITORY_NAME="${AWS_RESOURCE_NAME_PREFIX}"' >> $BASH_ENV
            echo 'export ECS_CLUSTER_NAME="${AWS_RESOURCE_NAME_PREFIX}-cluster"' >> $BASH_ENV
            echo 'export ECS_SERVICE_NAME="${AWS_RESOURCE_NAME_PREFIX}-service"' >> $BASH_ENV
      - run:
          Context: my_aws
          name: Login ECR
          command: |
            aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com
      - run:
          Context: my_aws
          name: tag image
          command: |
            docker tag cicd:${CIRCLE_SHA1} ${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/cicd:${CIRCLE_SHA1}
      - run:
          Context: my_aws
          name: Push image
          command: |
            docker push ${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/cicd:${CIRCLE_SHA1}
workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          context: my_aws
          requires:
            - build
